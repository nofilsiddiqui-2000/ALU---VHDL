# Arithmetic Unit Design in Structural VHDL

## Project Overview
This project implements an **Arithmetic Unit** capable of performing the following calculation:


- **A** and **B** are 8-bit unsigned inputs.
- **P** is a 16-bit unsigned output.

The design includes:
- Internal registers for input and output storage.
- A **status signal** to indicate when the calculation is complete.
- An **active-low reset** to reset all registers and outputs to 0.

This project has been developed using **structural VHDL**, with an emphasis on modularity, synthesis, and simulation.

---

## Features
1. **Structural VHDL Design**: Modular and clear architecture for synthesis and simulation.
2. **Multiplier Choice**: Utilized an efficient multiplier (e.g., Array or Booth) with justified selection.
3. **Comprehensive Testbench**: Validates functionality and edge cases.
4. **Generic Design**: Extensible to support varying input sizes.
5. **Enhanced Functionality**:
   - **Signed Arithmetic**: Supports signed inputs (A, B, and P).
   - **Additional Inputs**: Extended formula:
     ```
     P = (A * B) / (2 * C) + D
     ```
     where **C** and **D** are 8-bit unsigned inputs.
6. **Serial I/O**: Reduces I/O count with added control signals.
7. **Optimized Performance**: Balanced FPGA resource utilization and speed.

---

## Getting Started

### Prerequisites
To use or simulate the Arithmetic Unit, ensure you have the following:
- **ModelSim** or equivalent VHDL simulator for testing.
- **FPGA Development Environment** (e.g., Quartus, Vivado) for synthesis and hardware implementation.
- Basic knowledge of **VHDL** for any modifications.

### File Structure
